#include "bsp_bmp.h"
#include "ff.h"
#include "bsp_ili9341_lcd.h"
#include "bsp_usart1.h"

#define RGB24TORGB16(R,G,B) ((unsigned short int)((((R)>>3)<<11) | (((G)>>2)<<5)	| ((B)>>3)))

char pColorData[960];					/* ¨°?DD??2¨º¨¦?¨ºy?Y?o¡ä? 320 * 3 = 960 */
//tagRGBQUAD dataOfBmp[17*19];
FATFS bmpfs[2]; 
FIL bmpfsrc, bmpfdst; 
FRESULT bmpres;

/* ¨¨?1?2?D¨¨¨°a¡ä¨°¨®?bmp?¨¤1?¦Ì?¨¬¨¢¨º?D??¡é,??printf¡Á¡é¨º¨ª¦Ì??¡ä?¨¦
 * ¨¨?¨°a¨®?printf()¡ê?D¨¨??¡ä??¨²?y?¡¥???t¡ã¨¹o???¨¤¡ä
 */
#define BMP_DEBUG_PRINTF(FORMAT,...)  printf(FORMAT,##__VA_ARGS__)	 

/* ¡ä¨°¨®?BMP???t¦Ì?¨ª¡¤D??¡é¡ê?¨®?¨®¨²¦Ì¡Â¨º? */
static void showBmpHead(BITMAPFILEHEADER* pBmpHead)
{
    //BMP_DEBUG_PRINTF("\r\n");
    BMP_DEBUG_PRINTF("%d",(*pBmpHead).bfSize);
    BMP_DEBUG_PRINTF("%d",(*pBmpHead).bfReserved1);
    BMP_DEBUG_PRINTF("%d",(*pBmpHead).bfReserved2);
    BMP_DEBUG_PRINTF("%d",(*pBmpHead).bfOffBits);
		//BMP_DEBUG_PRINTF("\r\n");	
}

/* ¡ä¨°¨®?BMP???t¦Ì?¨ª¡¤D??¡é¡ê?¨®?¨®¨²¦Ì¡Â¨º? */
static void showBmpInforHead(tagBITMAPINFOHEADER* pBmpInforHead)
{
//    BMP_DEBUG_PRINTF("??¨ª?D??¡é¨ª¡¤:\r\n");
    BMP_DEBUG_PRINTF("%d",(*pBmpInforHead).biSize);
    BMP_DEBUG_PRINTF("%d",(*pBmpInforHead).biWidth);
    BMP_DEBUG_PRINTF("%d",(*pBmpInforHead).biHeight);
    BMP_DEBUG_PRINTF("%d",(*pBmpInforHead).biPlanes);
    BMP_DEBUG_PRINTF("%d",(*pBmpInforHead).biBitCount);
    BMP_DEBUG_PRINTF("%d",(*pBmpInforHead).biCompression);
    BMP_DEBUG_PRINTF("%d",(*pBmpInforHead).biSizeImage);
    BMP_DEBUG_PRINTF("%d",(*pBmpInforHead).biXPelsPerMeter);
    BMP_DEBUG_PRINTF("%d",(*pBmpInforHead).biYPelsPerMeter);
    BMP_DEBUG_PRINTF("%d",(*pBmpInforHead).biClrUsed);
    BMP_DEBUG_PRINTF("%d",(*pBmpInforHead).biClrImportant);
		BMP_DEBUG_PRINTF("\r\n");
} 
/*
 * ??¨º?bmp¨ª???, 24????2¨º¨¦?
 * ¨ª????¨ª?¨¨o¨ª???¨¨?¨´?Y¨ª???¡ä¨®D????¡§
 */
void Lcd_show_bmp(unsigned short int x, unsigned short int y,unsigned char *pic_name)
{
	int i, j, k;
	int width, height, l_width;

	BYTE red,green,blue;
	BITMAPFILEHEADER bitHead;
	BITMAPINFOHEADER bitInfoHead;
	int fileType;

	unsigned int read_num;
	unsigned char tmp_name[20];
	sprintf((char*)tmp_name,"0:%s",pic_name);
  
	f_mount(0, &bmpfs[0]);
	//BMP_DEBUG_PRINTF("file mount ok \r\n");    
	bmpres = f_open( &bmpfsrc , (char *)tmp_name, FA_OPEN_EXISTING | FA_READ);	
/*-------------------------------------------------------------------------------------------------------*/
	if(bmpres == FR_OK)
	{
		//BMP_DEBUG_PRINTF("Open file success\r\n");

		/* ?¨¢¨¨????t¨ª¡¤D??¡é  ¨¢???¡Á??¨²*/         
		f_read(&bmpfsrc,&fileType,sizeof(WORD),&read_num);     

		/* ?D??¨º?2?¨º?bmp???t "BM"*/
		if(fileType != 0x4d42)
		{
			BMP_DEBUG_PRINTF("file is not .bmp file!\r\n");
			return;
		}
		else
		{
			//BMP_DEBUG_PRINTF("Ok this is .bmp file\r\n");	
		}        
    //BMP_DEBUG_PRINTF("\r\n%d\r\n",fileType);
		BMP_DEBUG_PRINTF("%d\r\n",sizeof(tagBITMAPFILEHEADER));
			BMP_DEBUG_PRINTF("%d\r\n",sizeof(BITMAPINFOHEADER));
		/* ?¨¢¨¨?BMP???t¨ª¡¤D??¡é*/
		f_read(&bmpfsrc,&bitHead,sizeof(tagBITMAPFILEHEADER),&read_num);        
		showBmpHead(&bitHead);
		
		/* ?¨¢¨¨???¨ª?D??¡é¨ª¡¤D??¡é */
		f_read(&bmpfsrc,&bitInfoHead,sizeof(BITMAPINFOHEADER),&read_num);        
		showBmpInforHead(&bitInfoHead);
		
	}    
	else
	{
		BMP_DEBUG_PRINTF("file open fail!\r\n");
		return;
	}    
/*-------------------------------------------------------------------------------------------------------*/
	width = bitInfoHead.biWidth;
	height = bitInfoHead.biHeight;

	/* ??????¨ª?¦Ì?¨º¦Ì?¨º?¨ª?¨¨2¡é¨¨¡¤¡À¡ê?¨¹?a32¦Ì?¡À?¨ºy	*/
	l_width = WIDTHBYTES(width* bitInfoHead.biBitCount);	

	if(l_width > 960)
	{
		BMP_DEBUG_PRINTF("\n SORRY, PIC IS TOO BIG (<=320)\n");
		return;
	}
	
	/* ¨¦¨¨??Lcd Gram ¨¦¡§?¨¨¡¤??¨°?a: ¨®¨°????->¡Á¨®¨¦??? */
	Lcd_GramScan( 3 );
	
	/* ?a¨°???¨ª???¡ä¨®D?¦Ì?¡ä¡ã?¨²*/
	LCD_OpenWindow(x, y, width, height);

	
	/* ?D??¨º?¡¤?¨º?24bit??2¨º¨¦?¨ª? */
	if(bitInfoHead.biBitCount >= 24)
	{
		for(i=0;i< height; i++)
		{	  
			/* ?¨¢¨¨?¨°?DDbmp¦Ì?¨ºy?Y¦Ì?¨ºy¡Á¨¦pColorData¨¤??? */
			#if 0
				for(j=0; j< l_width; j++)	 													
				{                
//					f_read(&bmpfsrc,pColorData+j,1,&read_num);
				}            
			#elif 1				
				f_read(&bmpfsrc,pColorData,l_width/2,&read_num);
				//BMP_DEBUG_PRINTF("%c",pColorData);
				f_read(&bmpfsrc,pColorData+l_width/2,l_width/2,&read_num);
			#else
//				f_read(&bmpfsrc,pColorData,l_width,&read_num);
			#endif

			for(j=0; j<width; j++) 											   //¨°?DD¨®DD¡ìD??¡é
			{
				k = j*3;																	 //¨°?DD?D¦Ì¨²K??????¦Ì??e¦Ì?
				red = pColorData[k+2];
				green = pColorData[k+1];
				blue = 	pColorData[k];
				LCD_WR_Data(RGB24TORGB16(red,green,blue)); //D¡ä¨¨?LCD-GRAM
				//BMP_DEBUG_PRINTF((char*)RGB24TORGB16(red,green,blue));  //CSA¡ä??¨²¡ä?¨º?¨ª???¨ºy?Y
			}            
		}        	 																					     
	}    
	else 
	{        
		BMP_DEBUG_PRINTF("SORRY, THIS PIC IS NOT A 24BITS REAL COLOR");
		return ;
	}
	f_close(&bmpfsrc);   
	
}









